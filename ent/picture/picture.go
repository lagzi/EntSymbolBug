// Code generated by ent, DO NOT EDIT.

package picture

import (
	"time"
)

const (
	// Label holds the string label denoting the picture type in the database.
	Label = "picture"
	// FieldID holds the string denoting the id field in the database.
	FieldID = "id"
	// FieldCreateTime holds the string denoting the create_time field in the database.
	FieldCreateTime = "create_time"
	// FieldUpdateTime holds the string denoting the update_time field in the database.
	FieldUpdateTime = "update_time"
	// FieldOtherImportantThing holds the string denoting the other_important_thing field in the database.
	FieldOtherImportantThing = "other_important_thing"
	// FieldTimestamp holds the string denoting the timestamp field in the database.
	FieldTimestamp = "timestamp"
	// EdgeUser holds the string denoting the user edge name in mutations.
	EdgeUser = "user"
	// EdgeComponent holds the string denoting the component edge name in mutations.
	EdgeComponent = "component"
	// Table holds the table name of the picture in the database.
	Table = "pictures"
	// UserTable is the table that holds the user relation/edge.
	UserTable = "pictures"
	// UserInverseTable is the table name for the User entity.
	// It exists in this package in order to avoid circular dependency with the "user" package.
	UserInverseTable = "users"
	// UserColumn is the table column denoting the user relation/edge.
	UserColumn = "user_user_picture"
	// ComponentTable is the table that holds the component relation/edge.
	ComponentTable = "pictures"
	// ComponentInverseTable is the table name for the Component entity.
	// It exists in this package in order to avoid circular dependency with the "component" package.
	ComponentInverseTable = "components"
	// ComponentColumn is the table column denoting the component relation/edge.
	ComponentColumn = "component_pictures"
)

// Columns holds all SQL columns for picture fields.
var Columns = []string{
	FieldID,
	FieldCreateTime,
	FieldUpdateTime,
	FieldOtherImportantThing,
	FieldTimestamp,
}

// ForeignKeys holds the SQL foreign-keys that are owned by the "pictures"
// table and are not defined as standalone fields in the schema.
var ForeignKeys = []string{
	"component_pictures",
	"user_user_picture",
}

// ValidColumn reports if the column name is valid (part of the table columns).
func ValidColumn(column string) bool {
	for i := range Columns {
		if column == Columns[i] {
			return true
		}
	}
	for i := range ForeignKeys {
		if column == ForeignKeys[i] {
			return true
		}
	}
	return false
}

var (
	// DefaultCreateTime holds the default value on creation for the "create_time" field.
	DefaultCreateTime func() time.Time
	// DefaultUpdateTime holds the default value on creation for the "update_time" field.
	DefaultUpdateTime func() time.Time
	// UpdateDefaultUpdateTime holds the default value on update for the "update_time" field.
	UpdateDefaultUpdateTime func() time.Time
)
